name: CI

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install PHP (if needed)
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo_mysql

      # Install Composer dependencies
      - name: Install Composer dependencies
        run: composer install --no-scripts --no-progress --prefer-dist

      # Run Laravel migrations for test database
      - name: Run Laravel migrations for test database
        run: php artisan migrate --env=testing --force
        env:
          DB_CONNECTION: mysql
          DB_HOST: db
          DB_DATABASE: laravel_test
          DB_USERNAME: laravel
          DB_PASSWORD: laravel

      # Run PHPUnit tests
      - name: Run PHPUnit tests
        run: vendor/bin/phpunit --configuration phpunit.xml
        continue-on-error: true  # Continue to next step even if tests fail
        env:
          DB_CONNECTION: mysql
          DB_HOST: db
          DB_DATABASE: laravel_test
          DB_USERNAME: laravel
          DB_PASSWORD: laravel

  build-and-deploy:
    needs: run-tests
    runs-on: ubuntu-latest
    if: success()

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Install Docker CLI
      - name: Install Docker CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io

      # Login to Docker Hub
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_TOKEN }}

      # Build and push Docker images
      - name: Build and push Docker images
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker-compose -f docker-compose.prod.yml build
          docker-compose -f docker-compose.prod.yml push
